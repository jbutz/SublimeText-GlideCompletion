{
	"scope": "source.js -string -comment -constant",

	"completions": [

		// GlideRecord
		{ "trigger": "GlideRecord", "contents": "GlideRecord($0)" },
		// GlideRecord - Query
		{ "trigger": ".addActiveQuery()", "contents": "addActiveQuery()" },
		{ "trigger": ".addDomainQuery(Object o)", "contents": "addDomainQuery($0)" },
		{ "trigger": ".addEncodedQuery(String query)", "contents": "addEncodedQuery($0)" },
		{ "trigger": ".addInactiveQuery()", "contents": "addInactiveQuery()" },
		{ "trigger": ".addJoinQuery(joinTable, [primaryField], [joinTableField])", "contents": "addJoinQuery($0)" },
		{ "trigger": ".addNotNullQuery(String fieldName)", "contents": "addNotNullQuery($0)" },
		{ "trigger": ".addNullQuery(String fieldName)", "contents": "addNullQuery($0)" },
		{ "trigger": ".addOrCondition(String fieldName, [Object operator], Object value)", "contents": "addOrCondition($0,$1)" },
		{ "trigger": ".addQuery(String fieldName, [Object operator], Object value)", "contents": "addQuery($0,$1)" },
		{ "trigger": ".canCreate()", "contents": "canCreate()" },
		{ "trigger": ".canDelete()", "contents": "canDelete()" },
		{ "trigger": ".canRead()", "contents": "canRead()" },
		{ "trigger": ".canWrite()", "contents": "canWrite()" },
		{ "trigger": ".changes()", "contents": "changes()" },
		{ "trigger": ".find(columnName, value)", "contents": "find($0, $1)" },
		{ "trigger": ".hasAttachments()", "contents": "hasAttachments()" },
		{ "trigger": ".hasNext()", "contents": "hasNext()" },
		{ "trigger": ".instanceOf(String className)", "contents": "instanceOf($0)" },
		{ "trigger": ".isNewRecord()", "contents": "isNewRecord()" },
		{ "trigger": ".isValid()", "contents": "isValid()" },
		{ "trigger": ".isValidField(String columnName)", "contents": "isValidField($0)" },
		{ "trigger": ".isValidRecord()", "contents": "isValidRecord()" },
		{ "trigger": ".next()", "contents": "next()" },
		{ "trigger": "._next()", "contents": "_next()" },
		{ "trigger": ".operation()", "contents": "operation()" },
		{ "trigger": ".orderBy(String name)", "contents": "orderBy($0)" },
		{ "trigger": ".orderByDesc(String name)", "contents": "orderByDesc($0)" },
		{ "trigger": ".query([Object field, Object value])", "contents": "query()" },
		{ "trigger": ".queryNoDomain([Object field, Object value])", "contents": "queryNoDomain()" },
		{ "trigger": "._query([Object field, Object value])", "contents": "_query()" },
		{ "trigger": ".restoreLocation()", "contents": "restoreLocation()" },
		{ "trigger": ".saveLocation()", "contents": "saveLocation()" },

		// GlideRecord - Get
		{ "trigger": ".get(Object name, Object value)", "contents": "get($0, $1)" },
		{ "trigger": ".getAttribute(String attribute)", "contents": "getAttribute($0)" },
		{ "trigger": ".getClassDisplayValue()", "contents": "getClassDisplayValue()" },
		{ "trigger": ".getDisplayValue()", "contents": "getDisplayValue()" },
		{ "trigger": ".getED()", "contents": "getED()" },
		{ "trigger": ".getElement(String columnName)", "contents": "getElement($0)" },
		{ "trigger": ".getEncodedQuery()", "contents": "getEncodedQuery()" },
		{ "trigger": ".getEscapedDisplayValue()", "contents": "getEscapedDisplayValue()" },
		{ "trigger": ".getFields()", "contents": "getFields()" },
		{ "trigger": ".getLabel()", "contents": "getLabel()" },
		{ "trigger": ".getLink(boolean noStack)", "contents": "getLink($0)" },
		{ "trigger": ".getLocation()", "contents": "getLocation()" },
		{ "trigger": ".getPlural()", "contents": "getPlural()" },
		{ "trigger": ".getRecordClassName()", "contents": "getRecordClassName()" },
		{ "trigger": ".getRelatedLists()", "contents": "getRelatedLists()" },
		{ "trigger": ".getRelatedTables()", "contents": "getRelatedTables()" },
		{ "trigger": ".getRowCount()", "contents": "getRowCount()" },
		{ "trigger": ".getRowNumber()", "contents": "getRowNumber()" },
		{ "trigger": ".getTableName()", "contents": "getTableName()" },
		{ "trigger": ".getValue(String name)", "contents": "getValue($0)" },

		// GlideRecord - Set
	]
}